"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const fs_1=__importDefault(require("fs")),net_1=__importDefault(require("net")),config_1=__importDefault(require("../../config/config")),prometheus_1=require("../../lib/monitor/prometheus"),primary_1=require("./primary"),handler_1=require("../signal/handler"),{logger:{ipc}}=config_1.default,initialize=async()=>{if(!ipc.enabled)return;await(0,prometheus_1.initialize)("log"),fs_1.default.existsSync(ipc.path)&&fs_1.default.unlinkSync(ipc.path);const e=net_1.default.createServer(),o={path:ipc.path,readableAll:!0,writableAll:!0},s=r=>{let n=Buffer.from([]);r.on("data",t=>{n=Buffer.concat([n,t]);let i=n.indexOf(`
`);for(;i!==-1;){const{type:a,payload:l}=JSON.parse(n.slice(0,i).toString());a==="log"&&primary_1.pureLogger.log(l),n=n.slice(i+1),i=n.indexOf(`
`)}}).on("error",t=>{primary_1.pureLogger.error(t.message,{response:t})})};e.on("listening",()=>{primary_1.pureLogger.info(`Listening succesffully on ${e.address()}.`)}).on("connection",r=>{s(r)}).on("error",r=>{throw primary_1.pureLogger.error(r.message,{response:r}),r}).on("close",()=>{primary_1.pureLogger.info("IPC server has been closed.")}),e.listen(o),(0,handler_1.registerCleanupHandler)(async()=>{await new Promise((r,n)=>{e.close(t=>t?n(t):r(!0))})})};initialize();