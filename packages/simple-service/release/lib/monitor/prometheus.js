"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,o,r,n){n===void 0&&(n=r);var i=Object.getOwnPropertyDescriptor(o,r);(!i||("get"in i?!o.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return o[r]}}),Object.defineProperty(e,n,i)}:function(e,o,r,n){n===void 0&&(n=r),e[n]=o[r]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,o){Object.defineProperty(e,"default",{enumerable:!0,value:o})}:function(e,o){e.default=o}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var o={};if(e!=null)for(var r in e)r!=="default"&&Object.prototype.hasOwnProperty.call(e,r)&&__createBinding(o,e,r);return __setModuleDefault(o,e),o},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.initialize=void 0;const http_1=__importDefault(require("http")),prom_client_1=__importStar(require("prom-client")),cluster_1=require("cluster"),handler_1=require("../signal/handler"),util_1=require("../../lib/util"),config_1=__importDefault(require("../../config/config")),initialize=async(e,o=!1)=>{let r;o?cluster_1.isWorker?r=new Promise(n=>{new prom_client_1.AggregatorRegistry,prom_client_1.register.setDefaultLabels({app:`${config_1.default.monitor.promethuesLabel}-${config_1.default.nodeEnv}-${config_1.default.appEnv}-${e}}`}),prom_client_1.default.collectDefaultMetrics({gcDurationBuckets:[.001,.01,.1,1,2,5]}),n(!0)}):r=new Promise((n,i)=>{const s=new prom_client_1.AggregatorRegistry;prom_client_1.default.collectDefaultMetrics({register:s});const a=http_1.default.createServer(async(t,u)=>{if(t.url!==config_1.default.monitor.promethuesPath){t.statusCode=404,u.end(JSON.stringify({meta:{code:404,message:"Not supported url."},data:null}));return}u.setHeader("Content-Type",s.contentType);const l=await s.clusterMetrics();u.end(l)});a.listen(config_1.default.monitor.prometheusPort,()=>{config_1.default.isDev&&(console.log("\x1B[38;5;28m--------------------- API Prometheus Cluster Serivce ---------------------\x1B[0m"),console.log(`The http endpoints are as following.
`),console.log(`\x1B[30;1mLocal:\x1B[0m            http://localhost:\x1B[30;1m${config_1.default.monitor.prometheusPort}${config_1.default.monitor.promethuesPath}\x1B[0m`),console.log(`\x1B[30;1mOn Your Network:\x1B[0m  http://${util_1.ip.getLocalIPs()[0]}:\x1B[30;1m${config_1.default.monitor.prometheusPort}${config_1.default.monitor.promethuesPath}\x1B[0m`),console.log(`
`)),n(!0)}),a.on("error",t=>{i(t),t&&console.error(t)}),(0,handler_1.registerCleanupHandler)(async()=>{await new Promise((t,u)=>{a.close(l=>{if(l)return u(l);t(!0)})})})}):r=new Promise((n,i)=>{const s=new prom_client_1.Registry;s.setDefaultLabels({app:`${config_1.default.monitor.promethuesLabel}-${config_1.default.nodeEnv}-${config_1.default.appEnv}-${e}}`}),prom_client_1.default.collectDefaultMetrics({register:s});const a=http_1.default.createServer(async(t,u)=>{if(t.url!==config_1.default.monitor.promethuesPath){t.statusCode=404,u.end(JSON.stringify({meta:{code:404,message:"Not supported url."},data:null}));return}u.setHeader("Content-Type",s.contentType);const l=await s.metrics();u.end(l)});a.listen(config_1.default.monitor.prometheusPort,()=>{config_1.default.isDev&&(console.log("\x1B[38;5;28m--------------------- API Prometheus Serivce ---------------------\x1B[0m"),console.log(`The http endpoints are as following.
`),console.log(`\x1B[30;1mLocal:\x1B[0m            http://localhost:\x1B[30;1m${config_1.default.monitor.prometheusPort}${config_1.default.monitor.promethuesPath}\x1B[0m`),console.log(`\x1B[30;1mOn Your Network:\x1B[0m  http://${util_1.ip.getLocalIPs()[0]}:\x1B[30;1m${config_1.default.monitor.prometheusPort}${config_1.default.monitor.promethuesPath}\x1B[0m`),console.log(`
`)),n(!0)}),a.on("error",t=>{i(t),t&&console.error(t)}),(0,handler_1.registerCleanupHandler)(async()=>{await new Promise((t,u)=>{a.close(l=>{if(l)return u(l);t(!0)})})})}),(0,handler_1.registerInitPromise)(r),await r};exports.initialize=initialize;