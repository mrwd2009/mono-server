"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),require("dotenv/config");const koa_1=__importDefault(require("koa")),http_1=__importDefault(require("http")),config_1=__importDefault(require("./config/config")),util_1=require("./lib/util"),dashboard_1=require("./queue/dashboard"),prometheus_1=require("./lib/monitor/prometheus"),handler_1=require("./lib/signal/handler"),port=process.env.QUEUE_DASHBOARD_PORT?parseInt(process.env.QUEUE_DASHBOARD_PORT):5379,initialize=async()=>{const e=new koa_1.default;await(0,dashboard_1.initialize)(e),e.use(o=>{o.redirect(config_1.default.queue.dashboard.basePath)});const t=http_1.default.createServer(e.callback());t.listen(port,()=>{console.log("\x1B[38;5;28m--------------------- Queue Dashboard ---------------------\x1B[0m"),console.log(`The queue dashboard endpoints are as following.
`),console.log(`\x1B[30;1mLocal:\x1B[0m            http://localhost:\x1B[30;1m${port}\x1B[0m/`),config_1.default.isDev&&console.log(`\x1B[30;1mOn Your Network:\x1B[0m  http://${util_1.ip.getLocalIPs()[0]}:\x1B[30;1m${port}\x1B[0m/`),console.log(`
`)}).on("error",o=>{console.error(o)}),await(0,prometheus_1.initialize)("queue-dashboard"),(0,handler_1.registerCleanupHandler)(async()=>{await new Promise((o,n)=>{t.close(r=>r?n(r):o(!0))})})};initialize();