"use strict";var __importDefault=this&&this.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.logoutHandler=exports.confirmUserHandler=exports.unlockUserHandler=exports.resetPasswordHandler=exports.forgotPasswordHandler=exports.registerHandler=exports.loginHandler=void 0;const model_1=require("../model"),config_1=__importDefault(require("../../../config")),middleware_1=require("../../../middleware"),common_1=require("../../../lib/util/common"),maxStrLen=config_1.default.auth.maxStrLen;exports.loginHandler=[(0,middleware_1.showConfusedError)({error:"auth.confusedError"}),(0,middleware_1.validator)(r=>r.object({email:r.string().email().max(maxStrLen),password:r.string().max(maxStrLen),client:r.object({deviceType:r.string().optional(),os:r.string().optional(),browser:r.string().optional(),timeZone:r.string().optional()})})),(0,middleware_1.validateEmailDomains)(),async r=>{const{email:e,password:a,client:o}=r.mergedParams,i={email:e,password:a,client:o,ip:r.ip,userAgent:r.headers["user-agent"],referer:r.headers.referer,origin:r.headers.origin},{token:s,reset:n}=await model_1.userModel.login(i,r.i18n);if(n)return r.gateway.sendJSON({reset:!0,token:s});r.cookies.set(config_1.default.jwt.cookieKey,s,{httpOnly:!0,maxAge:config_1.default.jwt.expireHour*3600*1e3,signed:!0}),r.gateway.sendJSON({reset:!1})}],exports.registerHandler=[(0,middleware_1.showConfusedError)({error:"auth.confusedError"}),(0,middleware_1.validator)(r=>r.object({email:r.string().email().max(maxStrLen),displayName:r.string().max(maxStrLen),password:r.string().max(maxStrLen)})),(0,middleware_1.validateEmailDomains)(),async r=>{await model_1.userModel.register({...r.mergedParams,origin:r.headers.origin},r.i18n),r.gateway.sendJSON({done:!0})}],exports.forgotPasswordHandler=[(0,middleware_1.showConfusedError)({error:"auth.confusedError"}),(0,middleware_1.validator)(r=>r.object({email:r.string().email().max(maxStrLen)})),(0,middleware_1.validateEmailDomains)(),async r=>{const e=r.headers.origin;await model_1.userModel.forgotPassword({email:r.mergedParams.email,origin:e},r.i18n),r.gateway.sendJSON({done:!0})}],exports.resetPasswordHandler=[(0,middleware_1.showConfusedError)({error:"auth.invalidToken"}),(0,middleware_1.validator)(r=>r.object({password:r.string().max(maxStrLen),token:r.string()})),async r=>{await model_1.userModel.resetPassword(r.mergedParams,r.i18n),r.gateway.sendJSON({done:!0})}],exports.unlockUserHandler=[(0,middleware_1.showConfusedError)({error:"auth.invalidToken"}),(0,middleware_1.validator)(r=>r.object({token:r.string()})),async r=>{await model_1.userModel.unlockUser(r.mergedParams,r.i18n),r.gateway.sendJSON({done:!0})}],exports.confirmUserHandler=[(0,middleware_1.showConfusedError)({error:"auth.invalidToken"}),(0,middleware_1.validator)(r=>r.object({token:r.string()})),async r=>{await model_1.userModel.confirmUser(r.mergedParams,r.i18n),r.gateway.sendJSON({done:!0})}];const logoutHandler=async r=>{const e=(0,common_1.getJwtTokenFromReq)(r.req);r.skipSessionExtend=!0,await model_1.userModel.logoutUser(r.state.user.id,e,r.i18n),r.cookies.set(config_1.default.jwt.cookieKey,"",{signed:!0}),r.body={success:!0}};exports.logoutHandler=logoutHandler;