"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.logoutHandler=exports.confirmUserHandler=exports.unlockUserHandler=exports.resetPasswordHandler=exports.forgotPasswordHandler=exports.registerHandler=exports.loginHandler=void 0;const model_1=require("../model"),config_1=__importDefault(require("../../../config")),middleware_1=require("../../../middleware"),common_1=require("../../../lib/util/common"),maxStrLen=config_1.default.auth.maxStrLen;exports.loginHandler=[(0,middleware_1.validator)(e=>e.object({email:e.string().email().max(maxStrLen),password:e.string().max(maxStrLen),client:e.object({deviceType:e.string().optional(),os:e.string().optional(),browser:e.string().optional(),timeZone:e.string().optional()})})),(0,middleware_1.validateEmailDomains)(),async e=>{const{email:r,password:a,client:o}=e.mergedParams,i={email:r,password:a,client:o,ip:e.ip,userAgent:e.headers["user-agent"],referer:e.headers.referer,origin:e.headers.origin},{token:s,reset:n}=await model_1.userModel.login(i,e.i18n);if(n)return e.gateway.sendJSON({reset:!0,token:s});e.cookies.set(config_1.default.jwt.cookieKey,s,{httpOnly:!0,maxAge:config_1.default.jwt.expireHour*3600*1e3,signed:!0}),e.gateway.sendJSON({reset:!1})}],exports.registerHandler=[(0,middleware_1.showConfusedError)({error:"auth.confusedError"}),(0,middleware_1.validator)(e=>e.object({email:e.string().email().max(maxStrLen),displayName:e.string().max(maxStrLen),password:e.string().max(maxStrLen)})),(0,middleware_1.validateEmailDomains)(),async e=>{await model_1.userModel.register({...e.mergedParams,origin:e.headers.origin},e.i18n),e.gateway.sendJSON({done:!0})}],exports.forgotPasswordHandler=[(0,middleware_1.showConfusedError)({error:"auth.confusedError"}),(0,middleware_1.validator)(e=>e.object({email:e.string().email().max(maxStrLen)})),(0,middleware_1.validateEmailDomains)(),async e=>{const r=e.headers.origin;await model_1.userModel.forgotPassword({email:e.mergedParams.email,origin:r},e.i18n),e.gateway.sendJSON({done:!0})}],exports.resetPasswordHandler=[(0,middleware_1.showConfusedError)({error:"auth.invalidToken"}),(0,middleware_1.validator)(e=>e.object({password:e.string().max(maxStrLen),token:e.string()})),async e=>{await model_1.userModel.resetPassword(e.mergedParams,e.i18n),e.gateway.sendJSON({done:!0})}],exports.unlockUserHandler=[(0,middleware_1.showConfusedError)({error:"auth.invalidToken"}),(0,middleware_1.validator)(e=>e.object({token:e.string()})),async e=>{await model_1.userModel.unlockUser(e.mergedParams,e.i18n),e.gateway.sendJSON({done:!0})}],exports.confirmUserHandler=[(0,middleware_1.showConfusedError)({error:"auth.invalidToken"}),(0,middleware_1.validator)(e=>e.object({token:e.string()})),async e=>{await model_1.userModel.confirmUser(e.mergedParams,e.i18n),e.gateway.sendJSON({done:!0})}];const logoutHandler=async e=>{const r=(0,common_1.getJwtTokenFromReq)(e.req);e.skipSessionExtend=!0,await model_1.userModel.logoutUser(e.state.user.id,r,e.i18n),e.cookies.set(config_1.default.jwt.cookieKey,"",{signed:!0}),e.body={success:!0}};exports.logoutHandler=logoutHandler;