"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getContractVersionList=exports.deleteContractTree=exports.saveContractTreeReusableNode=exports.reparentContractTreeNode=exports.getContractTree=void 0;const map_1=__importDefault(require("lodash/map")),app_1=__importDefault(require("../../../config/model/app")),helper_1=require("../helper"),{matrix:{models:{ContractBody,ContractRoot},sequelize}}=app_1.default,getContractTree=async({root:e,version:t})=>await helper_1.contractTreeHelper.constructContractTree({root:e,version:t,ContractBody});exports.getContractTree=getContractTree;const reparentContractTreeNode=async e=>await sequelize.transaction(async t=>await helper_1.contractTreeHelper.reparentNode({payload:e,transaction:t,ContractBody}));exports.reparentContractTreeNode=reparentContractTreeNode;const saveContractTreeReusableNode=async e=>await sequelize.transaction(async t=>await helper_1.contractTreeHelper.saveReusableNode({node:e.node,name:e.name,type:e.type,transaction:t,ContractBody,ContractRoot}));exports.saveContractTreeReusableNode=saveContractTreeReusableNode;const deleteContractTree=async({root:e})=>{const t=await ContractBody.count({where:{_fk_contractroot:e,_fk_parent_contractbody:null}});return t===1&&await ContractRoot.destroy({where:{__pk_contractroot:e}}),t};exports.deleteContractTree=deleteContractTree;const getContractVersionList=async({root:e})=>{const t=ContractBody.findAll({attributes:["Version","Version_Type","Time_Sequence_ID"],where:{_fk_contractroot:e,_fk_parent_contractbody:null},order:[["Version","asc"]]}),o=ContractRoot.findOne({attributes:["ActiveVersion"],where:{__pk_contractroot:e}}),[n,a]=await Promise.all([t,o]);return(0,map_1.default)(n,r=>({version:r.Version,type:r.Version_Type,active:r.Version===a?.ActiveVersion}))};exports.getContractVersionList=getContractVersionList;