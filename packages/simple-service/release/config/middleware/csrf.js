"use strict";var __importDefault=this&&this.__importDefault||function(s){return s&&s.__esModule?s:{default:s}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.initialize=void 0;const csrf_1=__importDefault(require("csrf")),createCSRFMiddleware=(s={})=>{const t=Object.assign({invalidTokenMessage:"Invalid CSRF token",csrfSecretCookieKey:"csrf-secret",invalidTokenStatusCode:403,excludedMethods:["GET","HEAD","OPTIONS"],disableQuery:!1},s),r=new csrf_1.default(t);return async(e,o)=>{if(e.generateCSRFToken=()=>{let i=e.cookies.get(t.csrfSecretCookieKey,{signed:!0});return i||(i=r.secretSync(),e.cookies.set(t.csrfSecretCookieKey,i,{httpOnly:!0,signed:!0})),r.create(i)},t.excludedMethods.indexOf(e.method)!==-1)return await o();const n=e.cookies.get(t.csrfSecretCookieKey,{signed:!0});if(!n)return await o();const a=(e.request.body&&typeof e.request.body._csrf=="string"?e.request.body._csrf:!1)||!t.disableQuery&&e.query&&e.query._csrf||e.get("csrf-token")||e.get("xsrf-token")||e.get("x-csrf-token")||e.get("x-xsrf-token");return!a||!r.verify(n,a)?e.throw(t.invalidTokenStatusCode,typeof t.invalidTokenMessage=="function"?t.invalidTokenMessage(e):t.invalidTokenMessage):await o()}},initialize=async s=>{await s.use(createCSRFMiddleware())};exports.initialize=initialize,exports.default=exports.initialize;