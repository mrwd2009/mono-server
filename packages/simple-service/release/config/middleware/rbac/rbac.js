"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,r,s,i){i===void 0&&(i=s);var t=Object.getOwnPropertyDescriptor(r,s);(!t||("get"in t?!r.__esModule:t.writable||t.configurable))&&(t={enumerable:!0,get:function(){return r[s]}}),Object.defineProperty(e,i,t)}:function(e,r,s,i){i===void 0&&(i=s),e[i]=r[s]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,r){Object.defineProperty(e,"default",{enumerable:!0,value:r})}:function(e,r){e.default=r}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var r={};if(e!=null)for(var s in e)s!=="default"&&Object.prototype.hasOwnProperty.call(e,s)&&__createBinding(r,e,s);return __setModuleDefault(r,e),r},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.initialize=exports.advancedW=exports.advancedR=exports.generalW=exports.generalR=exports.adminW=exports.adminR=exports.checkPermission=exports.getUserPermissions=exports.permissions=void 0;const lodash_1=__importDefault(require("lodash")),core_1=require("@sequelize/core"),config_1=__importDefault(require("../../config")),app_1=__importDefault(require("../../model/app")),lib=__importStar(require("../../../lib")),permissions_1=__importDefault(require("./permissions"));exports.permissions=permissions_1.default;const{gateway:{sequelize}}=app_1.default,{error:{ForbiddenError}}=lib,getUserPermissions=async e=>{const r=`
    select rbac_roles.id, sequence_id from rbac_roles inner join rbac_users_roles on rbac_roles.id = rbac_users_roles.role_id
    where rbac_users_roles.app = :appEnv and user_id = :userId and enabled = 1
  `,s=await sequelize.query(r,{type:core_1.QueryTypes.SELECT,replacements:{appEnv:config_1.default.appEnv,userId:e}});if(!s.length)return[];const i={};let t="";lodash_1.default.forEach(s,(c,n)=>{t=`${t?" or ":""} sequence_id like :sequenceId${n}`,i[`sequenceId${n}`]=`${c.sequence_id}%`});const o=`
    select rbac_permissions.id from rbac_permissions inner join rbac_roles_permissions on rbac_permissions.id = permission_id
    where role_id in (
      select id from rbac_roles where ${t}
    )
  `,a=await sequelize.query(o,{type:core_1.QueryTypes.SELECT,replacements:i});return lodash_1.default.map(a,"id")};exports.getUserPermissions=getUserPermissions;const checkPermission=e=>async(r,s)=>{if(r.state.user?.type!=="user")return await s();if(config_1.default.isDev)return await s();const i=permissions_1.default[e];if(i){const t=await(0,exports.getUserPermissions)(r.state.user.id);if(lodash_1.default.includes(t,i))return await s();throw new ForbiddenError("Forbidden request!")}else throw new ForbiddenError("Invalid permission!")};exports.checkPermission=checkPermission;const adminR=(0,exports.checkPermission)("Admin.Read");exports.adminR=adminR;const adminW=(0,exports.checkPermission)("Admin.Write");exports.adminW=adminW;const generalR=(0,exports.checkPermission)("General.Read");exports.generalR=generalR;const generalW=(0,exports.checkPermission)("General.Write");exports.generalW=generalW;const advancedR=(0,exports.checkPermission)("Advanced.Read");exports.advancedR=advancedR;const advancedW=(0,exports.checkPermission)("Advanced.Write");exports.advancedW=advancedW;const initialize=async e=>{};exports.initialize=initialize,exports.default=exports.initialize;