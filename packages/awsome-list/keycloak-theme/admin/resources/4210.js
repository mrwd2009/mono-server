"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4210],{4210:(e,a,t)=>{t.r(a),t.d(a,{default:()=>b});var r=t(5863),n=t(710),p=t(8336),d=t(8798),l=t(1677),m=t(2954),i=t(1576),o=t(4326),c=t(3802),s=t(386),u=t(4839),y=t(5954),f=t(764),P=t(3172),g=t(1786),E=t(9217),Z=t(9766);function b(){const e=(0,i.cI)(),[a,t]=(0,r.eJ)(),[b,h]=(0,r.eJ)(),{adminClient:k}=(0,d.K3)(),{id:I,mapperId:w}=(0,m.UO)(),v=(0,m.k6)(),{realm:C}=(0,f.PL)(),{t:T}=(0,c.$G)("user-federation"),{addAlert:x,addError:D}=(0,o.Z7)(),[S,F]=(0,r.eJ)(!1);(0,d.ib)((async()=>{const e=await k.components.listSubComponents({id:I,type:"org.keycloak.storage.ldap.mappers.LDAPStorageMapper"});return w&&"new"!==w?{components:e,fetchedMapper:await k.components.findOne({id:w})}:{components:e}}),(({components:e,fetchedMapper:a})=>{if(t(a),h(e),"new"!==w&&!a)throw new Error(T("common:notFound"));a&&L(a)}),[]);const L=a=>{(0,p.Fz)(a,e.setValue)},[q,M]=(0,Z.W)({titleKey:"common:deleteMappingTitle",messageKey:"common:deleteMappingConfirm",continueButtonLabel:"common:delete",continueButtonVariant:n.Wu.danger,onConfirm:async()=>{try{await k.components.del({id:a.id}),x(T("common:mappingDeletedSuccess"),n.Ux.success),v.push((0,E.C)({id:I,realm:C,tab:"mappers"}))}catch(e){D("common:mappingDeletedError",e)}}}),V=(0,i.qo)({control:e.control,name:"providerId"}),B="new"===w;return b?r.ZP.createElement(r.ZP.Fragment,null,r.ZP.createElement(M,null),r.ZP.createElement(l.t,{titleKey:a?a.name:T("common:createNewMapper"),dropdownItems:B?void 0:[r.ZP.createElement(n.hP,{key:"delete",onClick:q},T("common:delete"))]}),r.ZP.createElement(n.NP,{variant:"light",isFilled:!0},r.ZP.createElement(u.N,{role:"manage-realm",isHorizontal:!0},!B&&r.ZP.createElement(n.cw,{label:T("common:id"),fieldId:"kc-ldap-mapper-id"},r.ZP.createElement(g.F,{isDisabled:!0,type:"text",id:"kc-ldap-mapper-id","data-testid":"ldap-mapper-id",name:"id",ref:e.register})),r.ZP.createElement(n.cw,{label:T("common:name"),labelIcon:r.ZP.createElement(s.B,{helpText:"user-federation-help:nameHelp",fieldLabelId:"name"}),fieldId:"kc-ldap-mapper-name",isRequired:!0},r.ZP.createElement(g.F,{isDisabled:!B,isRequired:!0,type:"text",id:"kc-ldap-mapper-name","data-testid":"ldap-mapper-name",name:"name",ref:e.register({required:!0}),validated:e.errors.name?n.LD.error:n.LD.default}),r.ZP.createElement(g.F,{hidden:!0,defaultValue:B?I:a?a.parentId:"",type:"text",id:"kc-ldap-parentId","data-testid":"ldap-mapper-parentId",name:"parentId",ref:e.register}),r.ZP.createElement(g.F,{hidden:!0,defaultValue:"org.keycloak.storage.ldap.mappers.LDAPStorageMapper",type:"text",id:"kc-ldap-provider-type","data-testid":"ldap-mapper-provider-type",name:"providerType",ref:e.register})),B?r.ZP.createElement(n.cw,{label:T("common:mapperType"),labelIcon:r.ZP.createElement(s.B,{helpText:"user-federation-help:mapperTypeHelp",fieldLabelId:"mapperType"}),fieldId:"kc-providerId",isRequired:!0},r.ZP.createElement(i.Qr,{name:"providerId",defaultValue:"",control:e.control,"data-testid":"ldap-mapper-type-select",render:({onChange:e,value:a})=>r.ZP.createElement(n.Ph,{toggleId:"kc-providerId",required:!0,onToggle:()=>F(!S),isOpen:S,onSelect:(a,t)=>{e(t),F(!1)},selections:a,variant:n.TM.typeahead},b.map((e=>r.ZP.createElement(n.$m,{key:e.id,value:e.id}))))})):r.ZP.createElement(n.cw,{label:T("common:mapperType"),labelIcon:r.ZP.createElement(s.B,{helpText:"user-federation-help:mapperTypeHelp",fieldLabelId:"mapperType"}),fieldId:"kc-ldap-mapper-type",isRequired:!0},r.ZP.createElement(g.F,{isDisabled:!B,isRequired:!0,type:"text",id:"kc-ldap-mapper-type","data-testid":"ldap-mapper-type-fld",name:"providerId",ref:e.register})),r.ZP.createElement(i.RV,{...e},!!V&&r.ZP.createElement(y.K,{properties:b.find((e=>e.id===V))?.properties}))),r.ZP.createElement(n.l0,{onSubmit:e.handleSubmit((()=>(async e=>{const a=(0,p.a)(e),t={...a,config:Object.entries(a.config||{}).reduce(((e,[a,t])=>(e[a]=Array.isArray(t)?t:[t],e)),{})};try{"new"===w?(await k.components.create(t),v.push((0,E.C)({realm:C,id:e.parentId,tab:"mappers"}))):await k.components.update({id:w},t),L(t),x(T("new"===w?"common:mappingCreatedSuccess":"common:mappingUpdatedSuccess"),n.Ux.success)}catch(e){D("new"===w?"common:mappingCreatedError":"common:mappingUpdatedError",e)}})(e.getValues())))},r.ZP.createElement(n.WK,null,r.ZP.createElement(n.zx,{isDisabled:!e.formState.isDirty,variant:"primary",type:"submit","data-testid":"ldap-mapper-save"},T("common:save")),r.ZP.createElement(n.zx,{variant:"link",onClick:()=>B?v.goBack():v.push(`/${C}/user-federation/ldap/${a.parentId}/mappers`),"data-testid":"ldap-mapper-cancel"},T("common:cancel")))))):r.ZP.createElement(P.g,null)}}}]);