"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[840],{840:(e,t,l)=>{l.r(t),l.d(t,{default:()=>S});var i=l(5863),n=l(710),a=l(3802),o=l(1576),c=l(4839),r=l(1677),s=l(2954),m=l(764),d=l(4326),P=l(8798),p=l(386),u=l(1786),f=l(4036),y=l(7973),g=l(9766),C=l(5760),E=l(9280),Z=l(6352),b=l(9761),k=l(3347),h=(l(5623),l(192)),v=l(1586),x=l(3172);const N=e=>{const{t}=(0,a.$G)("roles"),{adminClient:l}=(0,P.K3)(),[o,c]=(0,i.eJ)([]),[r,s]=(0,i.eJ)();return(0,P.ib)((()=>l.clientPolicies.listProfiles({includeGlobalProfiles:!0})),(e=>{const t=e.globalProfiles?.map((e=>({...e,global:!0}))),l=e.profiles?.map((e=>({...e,global:!1})));s([...t??[],...l??[]])}),[]),r?i.ZP.createElement(n.u_,{"data-testid":"addClientProfile",title:t("realm-settings:addClientProfile"),isOpen:e.open,onClose:e.toggleDialog,variant:n.vE.large,actions:[i.ZP.createElement(n.zx,{key:"add","data-testid":"add-client-profile-button",variant:"primary",isDisabled:!o.length,onClick:()=>{e.toggleDialog(),e.onConfirm(o)}},t("common:add")),i.ZP.createElement(n.zx,{key:"cancel",variant:"link",onClick:()=>{e.toggleDialog()}},t("common:cancel"))]},i.ZP.createElement(h.B,{loader:async()=>r?.filter((t=>!e.allProfiles.includes(t.name)))??[],ariaLabelKey:"realm-settings:profilesList",searchPlaceholderKey:"realm-settings:searchProfile",canSelectAll:!0,onSelect:e=>{c([...e])},columns:[{name:"name",displayKey:"realm-settings:clientProfileName",cellRenderer:({name:e,global:l})=>i.ZP.createElement(i.ZP.Fragment,null,e," ",l&&i.ZP.createElement(n.__,{color:"blue"},t("realm-settings:global")))},{name:"description",displayKey:"common:description"}],emptyState:i.ZP.createElement(v.M,{hasIcon:!0,message:t("noRoles"),instructions:t("noRolesInstructions"),primaryActionText:t("createRole")})})):i.ZP.createElement(x.g,null)};var w=l(8765);const K={name:"",description:"",conditions:[],enabled:!0,profiles:[]};function S(){const{t:e}=(0,a.$G)("realm-settings"),{reset:t,formState:{errors:l}}=(0,o.cI)({defaultValues:K}),{realm:h}=(0,m.PL)(),{addAlert:v,addError:S}=(0,d.Z7)(),{adminClient:L}=(0,P.K3)(),[B,I]=(0,i.eJ)(),[T,V]=(0,i.eJ)([]),[F,z]=(0,i.eJ)(),[U,D]=(0,i.eJ)(!1),[G,J]=(0,i.eJ)(),[R,$]=(0,i.eJ)(!1),[O,W]=(0,i.eJ)(),{policyName:q}=(0,s.UO)(),X=(0,s.k6)(),A=(0,o.cI)({mode:"onChange"}),{handleSubmit:H}=A,_=A.getValues(),j=({save:e,onChange:t,value:l})=>{const{t:o}=(0,a.$G)("realm-settings"),[c,s]=(0,g.W)({titleKey:"realm-settings:disablePolicyConfirmTitle",messageKey:"realm-settings:disablePolicyConfirm",continueButtonLabel:"common:disable",onConfirm:()=>{t(!l),e()}});return B?i.ZP.createElement(i.ZP.Fragment,null,i.ZP.createElement(s,null),i.ZP.createElement(ne,null),i.ZP.createElement(r.t,{titleKey:U||q?_.name:"realm-settings:createPolicy",divider:!0,dropdownItems:U||q?[i.ZP.createElement(n.hP,{key:"delete",value:"delete",onClick:()=>{ie()},"data-testid":"deleteClientPolicyDropdown"},o("deleteClientPolicy"))]:void 0,isEnabled:l,onToggle:l=>{l?(t(l),e()):c()}})):i.ZP.createElement(x.g,null)};(0,P.ib)((async()=>{const[e,t]=await Promise.all([L.clientPolicies.listPolicies(),L.clientPolicies.listProfiles({includeGlobalProfiles:!0})]);return{policies:e,profiles:t}}),(({policies:e,profiles:t})=>{const l=e.policies?.find((e=>e.name===q)),i=[...t.globalProfiles??[],...t.profiles??[]];I(e.policies??[]),l&&(Q(l),V(i),z(l),D(!0))}),[]);const Q=e=>{t(),Object.entries(e).map((([e,t])=>{A.setValue(e,t)}))},M=(B||[]).filter((e=>e.name===q)),Y=M[0]?.conditions||[],ee=M[0]?.profiles||[],te=(0,E.tN)().componentTypes?.["org.keycloak.services.clientpolicy.condition.ClientPolicyConditionProvider"],le=async()=>{const t=A.getValues(),l={...t,profiles:[],conditions:[]},i=()=>{const e=B?.some((e=>e.name===l.name));return e?B?.map((e=>e.name===l.name?l:e)):t.name!==q?B?.filter((e=>e.name!==q)).concat(t):B?.concat(t)};try{await L.clientPolicies.updatePolicy({policies:i()}),v(e(q?"realm-settings:updateClientPolicySuccess":"realm-settings:createClientPolicySuccess"),n.Ux.success),X.push((0,k.n)({realm:h,policyName:t.name})),D(!0)}catch(e){S("realm-settings:createClientPolicyError",e)}},[ie,ne]=(0,g.W)({titleKey:e("deleteClientPolicyConfirmTitle"),messageKey:e("deleteClientPolicyConfirm",{policyName:q}),continueButtonLabel:e("delete"),continueButtonVariant:n.Wu.danger,onConfirm:async()=>{const t=B?.filter((e=>e.name!==q));try{await L.clientPolicies.updatePolicy({policies:t}),v(e("deleteClientPolicySuccess"),n.Ux.success),X.push((0,w.G)({realm:h,tab:"policies"}))}catch(t){S(e("deleteClientPolicyError"),t)}}}),[ae,oe]=(0,g.W)({titleKey:e("deleteClientPolicyConditionConfirmTitle"),messageKey:e("deleteClientPolicyConditionConfirm",{condition:G?.name}),continueButtonLabel:e("delete"),continueButtonVariant:n.Wu.danger,onConfirm:async()=>{if(G?.name){F?.conditions?.splice(G.idx,1);try{await L.clientPolicies.updatePolicy({policies:B}),v(e("deleteConditionSuccess"),n.Ux.success),X.push((0,k.n)({realm:h,policyName:_.name}))}catch(t){S(e("deleteConditionError"),t)}}else{const t=B?.filter((e=>e.name!==q));try{await L.clientPolicies.updatePolicy({policies:t}),v(e("deleteClientSuccess"),n.Ux.success),X.push((0,w.G)({realm:h,tab:"policies"}))}catch(t){S(e("deleteClientError"),t)}}}}),[ce,re]=(0,g.W)({titleKey:e("deleteClientPolicyProfileConfirmTitle"),messageKey:e("deleteClientPolicyProfileConfirm",{profileName:O?.name,policyName:q}),continueButtonLabel:e("delete"),continueButtonVariant:n.Wu.danger,onConfirm:async()=>{if(O?.name){F?.profiles?.splice(O.idx,1);try{await L.clientPolicies.updatePolicy({policies:B}),v(e("deleteClientPolicyProfileSuccess"),n.Ux.success),X.push((0,k.n)({realm:h,policyName:_.name}))}catch(t){S(e("deleteClientPolicyProfileError"),t)}}else{const t=B?.filter((e=>e.name!==q));try{await L.clientPolicies.updatePolicy({policies:t}),v(e("deleteClientSuccess"),n.Ux.success),X.push((0,w.G)({realm:h,tab:"policies"}))}catch(t){S(e("deleteClientError"),t)}}}}),se=()=>{$(!R)};return i.ZP.createElement(i.ZP.Fragment,null,i.ZP.createElement(oe,null),i.ZP.createElement(re,null),i.ZP.createElement(N,{onConfirm:t=>{(async t=>{const l={...F,profiles:ee.concat(t),conditions:F?.conditions},i=B?.findIndex((e=>l.name===e.name));if(!i||-1===i)return;const a=[...(B||[]).slice(0,i),l,...(B||[]).slice(i+1)];try{await L.clientPolicies.updatePolicy({policies:a}),I(a),X.push((0,k.n)({realm:h,policyName:_.name})),v(e("realm-settings:addClientProfileSuccess"),n.Ux.success)}catch(e){S("realm-settings:addClientProfileError",e)}})(t.map((e=>e.name)))},allProfiles:ee,open:R,toggleDialog:se}),i.ZP.createElement(o.Qr,{name:"enabled",defaultValue:!0,control:A.control,render:({onChange:e,value:t})=>i.ZP.createElement(j,{value:t,onChange:e,realmName:h,save:le})}),i.ZP.createElement(n.NP,{variant:"light"},i.ZP.createElement(c.N,{onSubmit:H(le),isHorizontal:!0,role:"view-realm",className:"pf-u-mt-lg"},i.ZP.createElement(n.cw,{label:e("common:name"),fieldId:"kc-client-profile-name",isRequired:!0,helperTextInvalid:e("common:required"),validated:l.name?n.LD.error:n.LD.default},i.ZP.createElement(u.F,{ref:A.register({required:!0}),type:"text",id:"kc-client-profile-name",name:"name","data-testid":"client-policy-name"})),i.ZP.createElement(n.cw,{label:e("common:description"),fieldId:"kc-description"},i.ZP.createElement(f.Q,{name:"description","aria-label":e("description"),ref:A.register(),type:"text",id:"kc-client-policy-description","data-testid":"client-policy-description"})),i.ZP.createElement(n.WK,null,i.ZP.createElement(n.zx,{variant:"primary",type:"submit","data-testid":"saveCreatePolicy",isDisabled:!_.name},e("common:save")),i.ZP.createElement(n.zx,{id:"cancelCreatePolicy",variant:"link",onClick:()=>U||q?(A.setValue("name",F?.name),void A.setValue("description",F?.description)):X.push((0,w.G)({realm:h,tab:"policies"})),"data-testid":"cancelCreatePolicy"},e(U?"common:reload":"common:cancel"))),(U||A.formState.isSubmitted)&&i.ZP.createElement(i.ZP.Fragment,null,i.ZP.createElement(n.kC,null,i.ZP.createElement(n.B5,null,i.ZP.createElement(n.xv,{className:"kc-conditions",component:n.qO.h1},e("conditions"),i.ZP.createElement(p.B,{helpText:"realm-settings:realm-settings-help:conditions",fieldLabelId:"realm-settings:conditions"}))),i.ZP.createElement(n.B5,{align:{default:"alignRight"}},i.ZP.createElement(n.zx,{id:"addCondition",component:e=>i.ZP.createElement(s.rU,{...e,to:(0,C.k)({realm:h,policyName:_.name})}),variant:"link",className:"kc-addCondition","data-testid":"addCondition",icon:i.ZP.createElement(y.wl,null)},e("realm-settings:addCondition")))),Y.length>0?i.ZP.createElement(n.FR,{"aria-label":e("conditions"),isCompact:!0},Y.map(((e,t)=>i.ZP.createElement(n.LC,{"aria-labelledby":"conditions-list-item",key:`list-item-${t}`,id:e.condition,"data-testid":"conditions-list-item"},i.ZP.createElement(n.Vi,{"data-testid":"conditions-list-row"},i.ZP.createElement(n.p9,{dataListCells:[i.ZP.createElement(n.KX,{key:`name-${t}`,"data-testid":"condition-type"},0!==Object.keys(e.configuration).length?i.ZP.createElement(s.rU,{key:e.condition,"data-testid":`${e.condition}-condition-link`,to:(0,Z.V)({realm:h,conditionName:e.condition,policyName:q}),className:"kc-condition-link"},e.condition):e.condition,te?.map((l=>l.id===e.condition&&i.ZP.createElement(i.ZP.Fragment,null,i.ZP.createElement(p.B,{helpText:l.helpText,fieldLabelId:e.condition}),i.ZP.createElement(n.zx,{variant:"link",isInline:!0,icon:i.ZP.createElement(y.XH,{className:"kc-conditionType-trash-icon","data-testid":`delete-${e.condition}-condition`,onClick:()=>{ae(),J({idx:t,name:l.id})}})})))))]})))))):i.ZP.createElement(i.ZP.Fragment,null,i.ZP.createElement(n.iz,null),i.ZP.createElement(n.xv,{className:"kc-emptyConditions",component:n.qO.h6},e("realm-settings:emptyConditions")))),(U||A.formState.isSubmitted)&&i.ZP.createElement(i.ZP.Fragment,null,i.ZP.createElement(n.kC,null,i.ZP.createElement(n.B5,null,i.ZP.createElement(n.xv,{className:"kc-client-profiles",component:n.qO.h1},e("clientProfiles"),i.ZP.createElement(p.B,{helpText:"realm-settings-help:clientProfiles",fieldLabelId:"realm-settings:clientProfiles"}))),i.ZP.createElement(n.B5,{align:{default:"alignRight"}},i.ZP.createElement(n.zx,{id:"addClientProfile",variant:"link",className:"kc-addClientProfile","data-testid":"addClientProfile",icon:i.ZP.createElement(y.wl,null),onClick:se},e("realm-settings:addClientProfile")))),ee.length>0?i.ZP.createElement(n.FR,{"aria-label":e("profiles"),isCompact:!0},ee.map(((e,t)=>i.ZP.createElement(n.LC,{"aria-labelledby":`${e}-profile-list-item`,key:e,id:`${e}-profile-list-item`,"data-testid":"profile-list-item"},i.ZP.createElement(n.Vi,{"data-testid":"profile-list-row"},i.ZP.createElement(n.p9,{dataListCells:[i.ZP.createElement(n.KX,{key:"name","data-testid":"profile-name"},e&&i.ZP.createElement(s.rU,{key:e,"data-testid":"profile-name-link",to:(0,b.i)({realm:h,profileName:e}),className:"kc-profile-link"},e),ee.filter((t=>t===e)).map((l=>i.ZP.createElement(i.ZP.Fragment,null,i.ZP.createElement(p.B,{helpText:T.find((e=>l===e.name))?.description,fieldLabelId:e}),i.ZP.createElement(n.zx,{variant:"link",isInline:!0,icon:i.ZP.createElement(y.XH,{className:"kc-conditionType-trash-icon","data-testid":"deleteClientProfileDropdown",onClick:()=>{ce(),W({idx:t,name:l})}})})))))]})))))):i.ZP.createElement(i.ZP.Fragment,null,i.ZP.createElement(n.iz,null),i.ZP.createElement(n.xv,{className:"kc-emptyClientProfiles",component:n.qO.h6},e("realm-settings:emptyProfiles")))))))}}}]);