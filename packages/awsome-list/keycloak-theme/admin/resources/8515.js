"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8515],{8515:(e,i,n)=>{n.r(i),n.d(i,{default:()=>C});var t=n(5863),o=n(3802),c=n(1576),a=n(710),l=n(4839),r=n(5669),s=n(386),d=n(9280),m=n(390),p=n(8798),u=n(4326),g=n(7645),P=n(764),f=n(3347),y=n(5954);function C(){const{t:e}=(0,o.$G)("realm-settings"),{addAlert:i,addError:n}=(0,u.Z7)(),C=(0,g.k6)(),{realm:h}=(0,P.PL)(),[E,Z]=(0,t.eJ)(!1),[b,v]=(0,t.eJ)([]),[k,T]=(0,t.eJ)([]),[N,x]=(0,t.eJ)(),[I,J]=(0,t.eJ)(""),[S,w]=(0,t.eJ)([]),{policyName:U}=(0,g.UO)(),{conditionName:V}=(0,g.UO)(),$=(0,d.tN)(),z=(0,c.cI)({shouldUnregister:!1}),B=$.componentTypes?.["org.keycloak.services.clientpolicy.condition.ClientPolicyConditionProvider"],{adminClient:K}=(0,p.K3)();return(0,p.ib)((()=>K.clientPolicies.listPolicies()),(e=>{if(v(e.policies??[]),V){const n=e.policies?.find((e=>e.name===U)),t=n?.conditions?.find((e=>e.condition===V)),o=B?.find((e=>e.id===V));x(t),w(o?.properties),i=t,z.reset({config:i.configuration||{}})}var i}),[]),t.ZP.createElement(a.NP,{variant:"light"},t.ZP.createElement(r.b,{className:"kc-login-screen",title:e(V?"editCondition":"addCondition")},t.ZP.createElement(l.N,{isHorizontal:!0,role:"manage-realm",className:"pf-u-mt-lg",onSubmit:z.handleSubmit((async t=>{const o=t.config,c=()=>S.reduce(((e,i)=>(e[i.name]=o[i.name],e)),{}),l=b.map((e=>{if(e.name!==U)return e;let i=e.conditions??[];if(V){const n={condition:N?.condition,configuration:c()},t=i.findIndex((e=>V===e.condition));if(-1===t)return;const o=[...i.slice(0,t),n,...i.slice(t+1)];return{...e,conditions:o}}return i=i.concat({condition:k[0].condition,configuration:c()}),{...e,conditions:i}}));try{await K.clientPolicies.updatePolicy({policies:l}),v(l),C.push((0,f.n)({realm:h,policyName:U})),i(e(V?"realm-settings:updateClientConditionSuccess":"realm-settings:createClientConditionSuccess"),a.Ux.success)}catch(e){n("realm-settings:createClientConditionError",e)}}))},t.ZP.createElement(a.cw,{label:e("conditionType"),fieldId:"conditionType",labelIcon:t.ZP.createElement(s.B,{helpText:I?`realm-settings-help:${(0,m.eV)(I.replace(/-/g," "))}`:"realm-settings:anyClient",fieldLabelId:"realm-settings:conditionType"})},t.ZP.createElement(c.Qr,{name:"conditions",defaultValue:"any-client",control:z.control,render:({onChange:i,value:n})=>t.ZP.createElement(a.Ph,{placeholderText:e("selectACondition"),className:"kc-conditionType-select","data-testid":"conditionType-select",toggleId:"provider",isDisabled:!!V,onToggle:e=>Z(e),onSelect:(e,n)=>{i(n),w(n.properties),J(n.id),T([{condition:n.id}]),Z(!1)},selections:V||I,variant:a.TM.single,"aria-label":e("conditionType"),isOpen:E},B?.map((i=>t.ZP.createElement(a.$m,{selected:i.id===n,description:e(`realm-settings-help:${(0,m.eV)(i.id.replace(/-/g," "))}`),key:i.id,value:i},i.id))))})),t.ZP.createElement(c.RV,{...z},t.ZP.createElement(y.K,{properties:S})),t.ZP.createElement(a.WK,null,t.ZP.createElement(a.zx,{variant:"primary",type:"submit","data-testid":"addCondition-saveBtn",isDisabled:""===I&&!V},e(V?"common:save":"common:add")),t.ZP.createElement(a.zx,{variant:"link","data-testid":"addCondition-cancelBtn",onClick:()=>C.push((0,f.n)({realm:h,policyName:U}))},e("common:cancel"))))))}}}]);