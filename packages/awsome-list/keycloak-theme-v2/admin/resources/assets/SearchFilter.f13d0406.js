import{u as _,r as f,ay as w,az as F,j as o,aY as k,an as x,h,aF as D,F as g,ap as A}from"./index.0cb2e516.js";import{e as $,b,c as C,a as P,A as u}from"./ClientScopeTypes.9d1fc6d4.js";import{S as T,a as y}from"./Select.5a6b39aa.js";import{F as j}from"./filter-icon.fec9f70e.js";import{c as S}from"./HelpItem.e440d5db.js";const V=({clientId:e,selectedRows:s,refresh:i})=>{const{t:c}=_("client-scopes"),[l,a]=f.exports.useState(!1),{adminClient:n}=w(),{addAlert:r,addError:t}=F();return o(T,{toggleId:"change-type-dropdown",isOpen:l,selections:[],isDisabled:s.length===0,placeholderText:c("changeTypeTo"),onToggle:a,onSelect:async(p,d)=>{try{await Promise.all(s.map(m=>e?$(n,e,m,m.type,d):b(n,m,d))),a(!1),i(),r(c("clientScopeSuccess"),k.success)}catch(m){t("clients:clientScopeError",m)}},children:C(c,e?void 0:P)})},I=["all","saml","openid-connect"],Y=(e="")=>s=>s.name?.includes(e),q=e=>s=>e===u.none||s.type===e,B=e=>s=>e==="all"||s.protocol===e,O=({searchType:e,withProtocol:s=!1,onSelect:i})=>{const{t:c}=_("clients"),[l,a]=f.exports.useState(!1),n=t=>o(A,{onClick:()=>{i(t),a(!1)},children:c(`clientScopeSearch.${t}`)},t),r=[n("name"),n("type")];return s&&r.push(n("protocol")),o(x,{className:"keycloak__client-scopes__searchtype",toggle:h(D,{id:"toggle-id",onToggle:a,children:[o(j,{})," ",c(`clientScopeSearch.${e}`)]}),isOpen:l,dropdownItems:r})},G=({searchType:e,onSelect:s,type:i,onType:c,protocol:l,onProtocol:a})=>{const{t:n}=_("client-scopes"),[r,t]=f.exports.useState(!1);return h(g,{children:[e==="type"&&h(g,{children:[o(S,{children:o(O,{searchType:e,onSelect:s,withProtocol:!!l})}),o(S,{children:h(T,{className:"keycloak__client-scopes__searchtype",onToggle:t,isOpen:r,selections:[i===u.none?n("common:allTypes"):n(`common:clientScope.${i}`)],onSelect:(p,d)=>{c(d),t(!1)},children:[o(y,{value:u.none,children:n("common:allTypes")}),o(g,{children:C(n)})]})})]}),e==="protocol"&&!!l&&h(g,{children:[o(S,{children:o(O,{searchType:e,onSelect:s,withProtocol:!0})}),o(S,{children:o(T,{className:"keycloak__client-scopes__searchtype",onToggle:t,isOpen:r,selections:[n(`protocolTypes.${l}`)],onSelect:(p,d)=>{a?.(d),t(!1)},children:I.map(p=>o(y,{value:p,children:n(`protocolTypes.${p}`)},p))})})]})]})};export{V as C,O as S,G as a,Y as n,B as p,q as t};
