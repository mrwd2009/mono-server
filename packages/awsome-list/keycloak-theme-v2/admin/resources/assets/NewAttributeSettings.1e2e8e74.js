import{u as q,ay as X,r as k,bA as $,a_ as j,h as u,j as e,H as _,aA as de,F as E,s as F,ae as ce,aw as me,az as ue,P as pe,b4 as he,cN as Z,aY as be,aB as ge,cW as fe}from"./index.0cb2e516.js";import{a as L,b as O,C as w,u as ee,F as ae}from"./index.esm.6af887f8.js";import{S as ve}from"./ScrollForm.e8140edc.js";import{H as A}from"./HelpItem.e440d5db.js";import{F as B}from"./FormAccess.bee4f1e0.js";import{K as z}from"./KeycloakTextInput.b4d5b2db.js";/* empty css                               */import{i as ye}from"./isEqual.b67f23a3.js";import{a as f,F as ke,A as Ve}from"./FormGroup.3d5f3f16.js";import{S as H,b as W,a as K}from"./Select.5a6b39aa.js";import{R as I}from"./Radio.cfe305aa.js";import{G as te,a as U}from"./GridItem.0db472b0.js";import{C as J}from"./Checkbox.2dc73ed3.js";import{D as qe}from"./DynamicComponents.3dd18b3b.js";import{M as ie,a as re}from"./Modal.6593dfcc.js";import{u as le}from"./useToggle.8c992bea.js";import{a as se,b as ne,c as M,d as R,e as oe,f as D}from"./TableToolbar.c27bcd3c.js";import{u as xe}from"./ConfirmDialog.f8013bbb.js";import{P as Te}from"./plus-circle-icon.32cdf4dc.js";import{T as Se,a as Ce}from"./Text.c38ffb52.js";import{V as Ne}from"./ViewHeader.2586557f.js";import{K as we}from"./KeyValueInput.cb1ae3e8.js";import{U as Ae}from"./UserProfileContext.c39a7cda.js";import"./FormPanel.4ba67868.js";import"./CardHeader.f162738f.js";import"./Card.32e78d5f.js";import"./CardTitle.42e61ef4.js";import"./CardBody.a2e5e179.js";import"./copy-icon.cf10e1f5.js";import"./check.51c67984.js";import"./star-icon.97692015.js";import"./KeycloakTextArea.f5e2440a.js";import"./AddRoleMappingModal.4adc845a.js";import"./KeycloakDataTable.4e517788.js";import"./EmptyStateBody.a0363fe4.js";import"./EmptyStateSecondaryActions.1a804d56.js";import"./useLocaleSort.84ea7ec0.js";import"./resource.df4d2bbd.js";import"./joinPath.69b856b1.js";import"./filter-icon.fec9f70e.js";import"./CodeEditor.16ebafa0.js";import"./ClientSelect.a855e118.js";import"./MultiLineInput.e27bc560.js";import"./minus-circle-icon.de526f05.js";import"./GroupPickerDialog.f5430678.js";import"./DataListItemRow.8f458244.js";import"./data-list.f7ff2ea7.js";import"./grip-vertical-icon.1b75ab8f.js";import"./FileUpload.18e1e495.js";import"./PasswordInput.34ff6dd3.js";import"./FlexItem.308d9f82.js";const Q=[{label:"requiredForLabel.both",value:["admin","user"]},{label:"requiredForLabel.users",value:["user"]},{label:"requiredForLabel.admins",value:["admin"]}],Ie=()=>{const{t:a}=q("realm-settings"),{adminClient:s}=X(),l=L(),[r,o]=k.exports.useState(),[c,g]=k.exports.useState(),[b,h]=k.exports.useState(!1),[v,p]=k.exports.useState(!1),[m,C]=k.exports.useState(!1),{attributeName:n}=$(),x=!!n,y=O({control:l.control,name:"selector.scopes",defaultValue:[]}),N=O({control:l.control,name:"required.scopes",defaultValue:[]}),P=O({control:l.control,name:"isRequired",defaultValue:!1});return j(()=>s.clientScopes.find(),o,[]),j(()=>s.users.getProfile(),g,[]),u(B,{role:"manage-realm",isHorizontal:!0,children:[e(f,{label:a("attributeName"),labelIcon:e(A,{helpText:"realm-settings-help:attributeNameHelp",fieldLabelId:"realm-settings:attributeName"}),fieldId:"kc-attribute-name",isRequired:!0,validated:l.errors.name?"error":"default",helperTextInvalid:l.errors.name?.message,children:e(z,{isRequired:!0,type:"text",id:"kc-attribute-name",name:"name",defaultValue:"",ref:l.register({required:{value:!0,message:a("validateName")}}),"data-testid":"attribute-name",isDisabled:x,validated:l.errors.name?"error":"default"})}),e(f,{label:a("attributeDisplayName"),labelIcon:e(A,{helpText:"realm-settings-help:attributeDisplayNameHelp",fieldLabelId:"realm-settings:attributeDisplayName"}),fieldId:"kc-attribute-display-name",children:e(z,{type:"text",id:"kc-attribute-display-name",name:"displayName",defaultValue:"",ref:l.register,"data-testid":"attribute-display-name"})}),e(f,{label:a("attributeGroup"),labelIcon:e(A,{helpText:"realm-setting-help:attributeGroupHelp",fieldLabelId:"realm-setting:attributeGroup"}),fieldId:"kc-attribute-group",children:e(w,{name:"group",defaultValue:"",control:l.control,render:({onChange:d,value:t})=>e(H,{toggleId:"kc-attributeGroup",onToggle:()=>C(!m),isOpen:m,onSelect:(i,T)=>{d(T.toString()),C(!1)},selections:[t||a("common:choose")],variant:W.single,children:c?.groups?.map(i=>e(K,{value:i.name,children:i.name},i.name))})})}),e(_,{}),u(f,{label:a("enabledWhen"),fieldId:"enabledWhen",hasNoPaddingTop:!0,children:[e(I,{id:"always","data-testid":"always",isChecked:y.length===r?.length,name:"enabledWhen",label:a("always"),onChange:d=>{d?l.setValue("selector.scopes",r?.map(t=>t.name)):l.setValue("selector.scopes",[])},className:"pf-u-mb-md"}),e(I,{id:"scopesAsRequested","data-testid":"scopesAsRequested",isChecked:y.length!==r?.length,name:"enabledWhen",label:a("scopesAsRequested"),onChange:d=>{d?l.setValue("selector.scopes",[]):l.setValue("selector.scopes",r?.map(t=>t.name))},className:"pf-u-mb-md"})]}),e(f,{fieldId:"kc-scope-enabled-when",children:e(w,{name:"selector.scopes",control:l.control,defaultValue:[],render:({onChange:d,value:t})=>e(H,{name:"scopes","data-testid":"enabled-when-scope-field",variant:W.typeaheadMulti,typeAheadAriaLabel:"Select",chipGroupProps:{numChips:3,expandedText:a("common:hide"),collapsedText:a("common:showRemaining")},onToggle:i=>h(i),selections:t,onSelect:(i,T)=>{const V=T.toString();let S=[""];t?S=t.includes(V)?t.filter(G=>G!==V):[...t,V]:S=[V],d(S)},onClear:i=>{i.stopPropagation(),d([])},isOpen:b,isDisabled:y.length===r?.length,"aria-labelledby":"scope",children:r?.map(i=>e(K,{value:i.name},i.name))})})}),e(_,{}),e(f,{label:a("required"),labelIcon:e(A,{helpText:"realm-settings-help:requiredHelp",fieldLabelId:"realm-settings:required"}),fieldId:"kc-required",hasNoPaddingTop:!0,children:e(w,{name:"isRequired","data-testid":"required",defaultValue:!1,control:l.control,render:({onChange:d,value:t})=>e(de,{id:"kc-required",onChange:d,isChecked:t,label:a("common:on"),labelOff:a("common:off"),"aria-label":a("required")})})}),P&&u(E,{children:[e(f,{label:a("requiredFor"),fieldId:"requiredFor",hasNoPaddingTop:!0,children:e(w,{name:"required.roles","data-testid":"requiredFor",defaultValue:Q[0].value,control:l.control,render:({onChange:d,value:t})=>e("div",{className:"kc-requiredFor",children:Q.map(i=>e(I,{id:i.label,"data-testid":i.label,isChecked:ye(t,i.value),name:"roles",onChange:()=>{d(i.value)},label:a(i.label),className:"kc-requiredFor-option"},i.label))})})}),u(f,{label:a("requiredWhen"),fieldId:"requiredWhen",hasNoPaddingTop:!0,children:[e(I,{id:"requiredAlways","data-testid":"requiredAlways",isChecked:N.length===r?.length,name:"requiredWhen",label:a("always"),onChange:d=>{d?l.setValue("required.scopes",r?.map(t=>t.name)):l.setValue("required.scopes",[])},className:"pf-u-mb-md"}),e(I,{id:"requiredScopesAsRequested","data-testid":"requiredScopesAsRequested",isChecked:N.length!==r?.length,name:"requiredWhen",label:a("scopesAsRequested"),onChange:d=>{d?l.setValue("required.scopes",[]):l.setValue("required.scopes",r?.map(t=>t.name))},className:"pf-u-mb-md"})]}),e(f,{fieldId:"kc-scope-required-when",children:e(w,{name:"required.scopes",control:l.control,defaultValue:[],render:({onChange:d,value:t})=>e(H,{name:"scopeRequired","data-testid":"required-when-scope-field",variant:W.typeaheadMulti,typeAheadAriaLabel:"Select",chipGroupProps:{numChips:3,expandedText:a("common:hide"),collapsedText:a("common:showRemaining")},onToggle:i=>p(i),selections:t,onSelect:(i,T)=>{const V=T.toString();let S=[""];t?S=t.includes(V)?t.filter(G=>G!==V):[...t,V]:S=[V],d(S)},onClear:i=>{i.stopPropagation(),d([])},isOpen:v,isDisabled:N.length===r?.length,"aria-labelledby":"scope",children:r?.map(i=>e(K,{value:i.name},i.name))})})})]})]})},Y=({name:a})=>{const{t:s}=q("realm-settings"),{control:l}=L();return e(te,{children:e(w,{name:`permissions.${a}`,control:l,defaultValue:[],render:({onChange:r,value:o})=>u(E,{children:[e(U,{lg:4,sm:6,children:e(J,{id:`user-${a}`,label:s("user"),value:"user","data-testid":`user-${a}`,isChecked:o.includes("user"),onChange:()=>{const c="user",g=o.includes(c)?o.filter(b=>b!==c):[...o,c];r(g)}})}),e(U,{lg:8,sm:6,children:e(J,{id:`admin-${a}`,label:s("admin"),value:"admin","data-testid":`admin-${a}`,isChecked:o.includes("admin"),onChange:()=>{const c="admin",g=o.includes(c)?o.filter(b=>b!==c):[...o,c];r(g)}})})]})})})},Re=()=>{const{t:a}=q("realm-settings");return u(B,{role:"manage-realm",isHorizontal:!0,children:[e(f,{hasNoPaddingTop:!0,label:a("whoCanEdit"),labelIcon:e(A,{helpText:"realm-settings-help:whoCanEditHelp",fieldLabelId:"realm-settings:whoCanEdit"}),fieldId:"kc-who-can-edit",children:e(Y,{name:"edit"})}),e(f,{hasNoPaddingTop:!0,label:a("whoCanView"),labelIcon:e(A,{helpText:"realm-settings-help:whoCanViewHelp",fieldLabelId:"realm-settings:whoCanView"}),fieldId:"kc-who-can-view",children:e(Y,{name:"view"})})]})},De=({open:a,toggleDialog:s,onConfirm:l,selected:r})=>{const{t:o}=q("realm-settings"),c=ee(),{handleSubmit:g}=c,b=r,h=v=>{l({...v,name:r.name}),s()};return e(ie,{variant:re.small,title:o("addValidatorRole",{validatorName:b.name}),description:b.description,isOpen:a,onClose:s,actions:[e(F,{"data-testid":"save-validator-role-button",variant:"primary",onClick:()=>g(h)(),children:o("common:save")},"save"),e(F,{"data-testid":"cancel-validator-role-button",variant:"link",onClick:s,children:o("common:cancel")},"cancel")],children:e(ae,{...c,children:e(qe,{properties:b.config})})})},Fe=[{name:"double",description:"Check if the value is a double and within a lower and/or upper range. If no range is defined, the validator only checks whether the value is a valid number.",config:[{type:"String",defaultValue:"",helpText:"The minimal allowed value - this config is optional.",label:"Minimum",name:"min"},{type:"String",defaultValue:"",helpText:"The maximal allowed value - this config is optional.",label:"Maximum",name:"max"}]},{name:"email",description:"Check if the value has a valid e-mail format.",config:[]},{name:"integer",description:"Check if the value is an integer and within a lower and/or upper range. If no range is defined, the validator only checks whether the value is a valid number.",config:[{type:"String",defaultValue:"",helpText:"The minimal allowed value - this config is optional.",label:"Minimum",name:"min"},{type:"String",defaultValue:"",helpText:"The maximal allowed value - this config is optional.",label:"Maximum",name:"max"}]},{name:"length",description:"Check the length of a string value based on a minimum and maximum length.",config:[{type:"String",defaultValue:"",helpText:"The minimum length",label:"Minimum length",name:"min"},{type:"String",defaultValue:"",helpText:"The maximum length",label:"Maximum length",name:"max"},{type:"boolean",defaultValue:!1,helpText:"Disable trimming of the String value before the length check",label:"Trimming disabled",name:"trim-disabled"}]},{name:"local-date",description:"Check if the value has a valid format based on the realm and/or user locale.",config:[]},{name:"options",description:"Check if the value is from the defined set of allowed values. Useful to validate values entered through select and multiselect fields.",config:[{type:"MultivaluedString",defaultValue:"",helpText:"List of allowed options",label:"Options",name:"options"}]},{name:"pattern",description:"Check if the value matches a specific RegEx pattern.",config:[{type:"String",defaultValue:"",helpText:"RegExp pattern the value must match. Java Pattern syntax is used.",label:"RegExp pattern",name:"pattern"},{type:"String",defaultValue:"",helpText:"Key of the error message in i18n bundle. Dafault message key is error-pattern-no-match",label:"Error message key",name:"error-message"}]},{name:"person-name-prohibited-characters",description:"Check if the value is a valid person name as an additional barrier for attacks such as script injection. The validation is based on a default RegEx pattern that blocks characters not common in person names.",config:[{type:"String",defaultValue:"",helpText:"Key of the error message in i18n bundle. Dafault message key is error-person-name-invalid-character",label:"Error message key",name:"error-message"}]},{name:"uri",description:"Check if the value is a valid URI.",config:[]},{name:"username-prohibited-characters",description:"Check if the value is a valid username as an additional barrier for attacks such as script injection. The validation is based on a default RegEx pattern that blocks characters not common in usernames.",config:[{type:"String",defaultValue:"",helpText:"Key of the error message in i18n bundle. Dafault message key is error-username-invalid-character",label:"Error message key",name:"error-message"}]}],Pe=({selectedValidators:a,toggleDialog:s,onConfirm:l})=>{const{t:r}=q("realm-settings"),[o,c]=k.exports.useState(),[g,b]=k.exports.useState(()=>Fe.filter(({name:p})=>!a.map(({key:m})=>m).includes(p))),[h,v]=le();return u(E,{children:[h&&e(De,{onConfirm:p=>{l(p),b(g.filter(({name:m})=>m!==p.name))},open:h,toggleDialog:v,selected:o}),e(ie,{variant:re.small,title:r("addValidator"),isOpen:!0,onClose:s,children:u(se,{"aria-label":"validators-table",children:[e(ne,{children:u(M,{children:[e(R,{children:r("validatorDialogColNames.colName")}),e(R,{children:r("validatorDialogColNames.colDescription")})]})}),e(oe,{children:g.map(p=>u(M,{onRowClick:()=>{c(p),v()},isHoverable:!0,children:[e(D,{dataLabel:r("validatorDialogColNames.colName"),children:p.name}),e(D,{dataLabel:r("validatorDialogColNames.colDescription"),children:p.description})]},p.name))})]})})]})},Oe=()=>{const{t:a}=q("realm-settings"),[s,l]=le(),[r,o]=k.exports.useState(),{setValue:c,control:g,register:b}=L(),h=O({name:"validations",control:g,defaultValue:[]});k.exports.useEffect(()=>{b("validations")},[]);const[v,p]=xe({titleKey:a("deleteValidatorConfirmTitle"),messageKey:a("deleteValidatorConfirmMsg",{validatorName:r?.name}),continueButtonLabel:"common:delete",continueButtonVariant:ce.danger,onConfirm:async()=>{const m=h.filter(C=>C.key!==r?.name);c("validations",[...m])}});return u(E,{children:[s&&e(Pe,{selectedValidators:h,onConfirm:m=>{c("validations",[...h,{key:m.name,value:m.config}])},toggleDialog:l}),e(p,{}),u("div",{className:"kc-attributes-validations",children:[e(F,{id:"addValidator",onClick:()=>l(),variant:"link","data-testid":"addValidator",className:"kc--attributes-validations--add-validation-button",icon:e(Te,{}),children:a("realm-settings:addValidator")}),e(_,{}),u(se,{"aria-label":"validators-table",children:[e(ne,{children:u(M,{children:[e(R,{children:a("validatorColNames.colName")}),e(R,{children:a("validatorColNames.colConfig")}),e(R,{})]})}),u(oe,{children:[h.map(m=>u(M,{children:[e(D,{dataLabel:a("validatorColNames.colName"),children:m.key}),e(D,{dataLabel:a("validatorColNames.colConfig"),children:JSON.stringify(m.value)}),e(D,{className:"kc--attributes-validations--action-cell",children:e(F,{variant:"link","data-testid":"deleteValidator",onClick:()=>{v(),o({name:m.key})},children:a("common:delete")},"validator")})]},m.key)),h.length===0&&e(Se,{className:"kc-emptyValidators",component:Ce.h6,children:a("realm-settings:emptyValidators")})]})]})]})]})},Me=()=>{const{t:a}=q("realm-settings");return e(B,{role:"manage-realm",isHorizontal:!0,children:e(f,{hasNoPaddingTop:!0,label:a("annotations"),fieldId:"kc-annotations",className:"kc-annotations-label",children:e(te,{className:"kc-annotations",children:e(U,{children:e(we,{name:"annotations"})})})})})},Ee=({save:a})=>{const{t:s}=q("realm-settings"),l=L(),{realm:r,attributeName:o}=$(),c=!!o;return u(Ae,{children:[e(ve,{sections:[{title:s("generalSettings"),panel:e(Ie,{})},{title:s("permission"),panel:e(Re,{})},{title:s("validations"),panel:e(Oe,{})},{title:s("annotations"),panel:e(Me,{})}]}),e(ke,{onSubmit:l.handleSubmit(a),children:u(Ve,{className:"keycloak__form_actions",children:[e(F,{variant:"primary",type:"submit","data-testid":"attribute-create",children:s(c?"common:save":"common:create")}),e(he,{to:Z({realm:r,tab:"attributes"}),"data-testid":"attribute-cancel",className:"kc-attributeCancel",children:s("common:cancel")})]})})]})};function Oa(){const{realm:a,attributeName:s}=$(),{adminClient:l}=X(),r=ee({shouldUnregister:!1}),{t:o}=q("realm-settings"),c=me(),{addAlert:g,addError:b}=ue(),[h,v]=k.exports.useState(null),p=!!s,m=n=>Object.entries(n||[]).map(([x,y])=>({key:x,value:y}));j(()=>l.users.getProfile(),n=>{v(n);const{annotations:x,validations:y,permissions:N,selector:P,required:d,...t}=n.attributes.find(i=>i.name===s)||{};ge(t,r.setValue),Object.entries(fe.flatten({permissions:N,selector:P,required:d},{safe:!0})).map(([i,T])=>r.setValue(i,T)),r.setValue("annotations",m(x)),r.setValue("validations",m(y)),r.setValue("isRequired",d!==void 0)},[]);const C=async n=>{const x=n.validations?.reduce((t,i)=>(t[i.key]=i.value?.length===0?{}:i.value,t),{}),y=n.annotations.reduce((t,i)=>Object.assign(t,{[i.key]:i.value}),{}),d=p?(()=>h?.attributes.map(t=>t.name!==s?t:(delete t.required,Object.assign({...t,name:s,displayName:n.displayName,validations:x,selector:n.selector,permissions:n.permissions,annotations:y},n.isRequired?{required:n.required}:void 0,n.group?{group:n.group}:void 0))))():(()=>h?.attributes.concat([Object.assign({name:n.name,displayName:n.displayName,required:n.isRequired?n.required:{},validations:x,selector:n.selector,permissions:n.permissions,annotations:y},n.isRequired?{required:n.required}:void 0,n.group?{group:n.group}:void 0)]))();try{await l.users.updateProfile({...h,attributes:d,realm:a}),c(Z({realm:a,tab:"attributes"})),g(o("realm-settings:createAttributeSuccess"),be.success)}catch(t){b("realm-settings:createAttributeError",t)}};return u(ae,{...r,children:[e(Ne,{titleKey:p?s:o("createAttribute"),subKey:p?"":o("createAttributeSubTitle")}),e(pe,{variant:"light",children:e(Ee,{save:()=>r.handleSubmit(C)()})})]})}export{Oa as default};
