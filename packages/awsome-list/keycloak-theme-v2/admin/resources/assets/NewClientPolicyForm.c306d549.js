import{u as $,ay as se,r as g,a_ as re,j as i,K as ce,s as k,h as n,F as C,L as ve,l as Ne,az as we,bA as Ie,aw as Le,g as Ke,ae as H,aY as D,cG as I,cF as L,P as Ve,av as J,b4 as O,cU as Ae,cV as Fe,H as Q,cD as Ee,ap as Re}from"./index.0cb2e516.js";import{u as W,C as Be}from"./index.esm.6af887f8.js";import{F as Me}from"./FormAccess.bee4f1e0.js";import{V as He}from"./ViewHeader.2586557f.js";import{H as K}from"./HelpItem.e440d5db.js";import{K as Oe}from"./KeycloakTextInput.b4d5b2db.js";import{K as $e}from"./KeycloakTextArea.f5e2440a.js";import{u as V}from"./ConfirmDialog.f8013bbb.js";import{K as je,L as Ge}from"./KeycloakDataTable.4e517788.js";import{M as qe,a as ze}from"./Modal.6593dfcc.js";/* empty css                               */import{a as X,A as Ue}from"./FormGroup.3d5f3f16.js";import{F as Z,a as A}from"./FlexItem.308d9f82.js";import{T as F,a as E}from"./Text.c38ffb52.js";import{P as ee}from"./plus-circle-icon.32cdf4dc.js";import{e as ie,D as te,a as oe,c as le,d as ne}from"./DataListItemRow.8f458244.js";import{T as ae}from"./trash-icon.1ac02c7c.js";import"./copy-icon.cf10e1f5.js";import"./GridItem.0db472b0.js";import"./TableToolbar.c27bcd3c.js";import"./star-icon.97692015.js";import"./check.51c67984.js";import"./grip-vertical-icon.1b75ab8f.js";import"./Checkbox.2dc73ed3.js";import"./EmptyStateBody.a0363fe4.js";import"./EmptyStateSecondaryActions.1a804d56.js";import"./data-list.f7ff2ea7.js";const Ye=t=>{const{t:P}=$("roles"),{adminClient:R}=se(),[r,y]=g.exports.useState([]),[f,d]=g.exports.useState();re(()=>R.clientPolicies.listProfiles({includeGlobalProfiles:!0}),u=>{const x=u.globalProfiles?.map(T=>({...T,global:!0})),h=u.profiles?.map(T=>({...T,global:!1}));d([...x??[],...h??[]])},[]);const a=async()=>f?.filter(u=>!t.allProfiles.includes(u.name))??[];if(!f)return i(ce,{});const N=({name:u,global:x})=>n(C,{children:[u," ",x&&i(ve,{color:"blue",children:P("realm-settings:global")})]});return i(qe,{"data-testid":"addClientProfile",title:P("realm-settings:addClientProfile"),isOpen:t.open,onClose:t.toggleDialog,variant:ze.large,actions:[i(k,{"data-testid":"add-client-profile-button",variant:"primary",isDisabled:!r.length,onClick:()=>{t.toggleDialog(),t.onConfirm(r)},children:P("common:add")},"add"),i(k,{variant:"link",onClick:()=>{t.toggleDialog()},children:P("common:cancel")},"cancel")],children:i(je,{loader:a,ariaLabelKey:"realm-settings:profilesList",searchPlaceholderKey:"realm-settings:searchProfile",canSelectAll:!0,onSelect:u=>{y([...u])},columns:[{name:"name",displayKey:"realm-settings:clientProfileName",cellRenderer:N},{name:"description",displayKey:"common:description"}],emptyState:i(Ge,{hasIcon:!0,message:P("noRoles"),instructions:P("noRolesInstructions"),primaryActionText:P("createRole")})})})},_e={name:"",description:"",conditions:[],enabled:!0,profiles:[]};function Si(){const{t}=$("realm-settings"),{reset:P,formState:{errors:R}}=W({defaultValues:_e}),{realm:r}=Ne(),{addAlert:y,addError:f}=we(),{adminClient:d}=se(),[a,N]=g.exports.useState(),[u,x]=g.exports.useState([]),[h,T]=g.exports.useState(),[S,j]=g.exports.useState(!1),[B,de]=g.exports.useState(),[G,me]=g.exports.useState(!1),[M,pe]=g.exports.useState(),{policyName:s}=Ie(),b=Le(),m=W({mode:"onChange"}),{handleSubmit:fe}=m,w=m.getValues(),ue=({save:e,onChange:o,value:l})=>{const{t:p}=$("realm-settings"),[c,Te]=V({titleKey:"realm-settings:disablePolicyConfirmTitle",messageKey:"realm-settings:disablePolicyConfirm",continueButtonLabel:"common:disable",onConfirm:()=>{o(!l),e()}});return a?n(C,{children:[i(Te,{}),i(ge,{}),i(He,{titleKey:S||s?s:"realm-settings:createPolicy",divider:!0,dropdownItems:S||s?[i(Re,{value:"delete",onClick:()=>{Ce()},"data-testid":"deleteClientPolicyDropdown",children:p("deleteClientPolicy")},"delete")]:void 0,isEnabled:l,onToggle:_=>{_?(o(_),e()):c()}})]}):i(ce,{})};re(async()=>{const[e,o]=await Promise.all([d.clientPolicies.listPolicies(),d.clientPolicies.listProfiles({includeGlobalProfiles:!0})]);return{policies:e,profiles:o}},({policies:e,profiles:o})=>{const l=e.policies?.find(c=>c.name===s),p=[...o.globalProfiles??[],...o.profiles??[]];N(e.policies??[]),l&&(Pe(l),x(p),T(l),j(!0))},[]);const Pe=e=>{P(),Object.entries(e).map(([o,l])=>{m.setValue(o,l)})},q=(a||[]).filter(e=>e.name===s),z=q[0]?.conditions||[],v=q[0]?.profiles||[],ye=Ke().componentTypes?.["org.keycloak.services.clientpolicy.condition.ClientPolicyConditionProvider"],U=async()=>{const e=m.getValues(),o={...e,profiles:[],conditions:[]},l=()=>a?.some(c=>c.name===o.name)?a?.map(c=>c.name===o.name?o:c):e.name!==s?a?.filter(c=>c.name!==s).concat(e):a?.concat(e);try{await d.clientPolicies.updatePolicy({policies:l()}),y(t(s?"realm-settings:updateClientPolicySuccess":"realm-settings:createClientPolicySuccess"),D.success),b(L({realm:r,policyName:e.name})),j(!0)}catch(p){f("realm-settings:createClientPolicyError",p)}},[Ce,ge]=V({titleKey:t("deleteClientPolicyConfirmTitle"),messageKey:t("deleteClientPolicyConfirm",{policyName:s}),continueButtonLabel:t("delete"),continueButtonVariant:H.danger,onConfirm:async()=>{const e=a?.filter(o=>o.name!==s);try{await d.clientPolicies.updatePolicy({policies:e}),y(t("deleteClientPolicySuccess"),D.success),b(I({realm:r,tab:"policies"}))}catch(o){f(t("deleteClientPolicyError"),o)}}}),[he,be]=V({titleKey:t("deleteClientPolicyConditionConfirmTitle"),messageKey:t("deleteClientPolicyConditionConfirm",{condition:B?.name}),continueButtonLabel:t("delete"),continueButtonVariant:H.danger,onConfirm:async()=>{if(B?.name){h?.conditions?.splice(B.idx,1);try{await d.clientPolicies.updatePolicy({policies:a}),y(t("deleteConditionSuccess"),D.success),b(L({realm:r,policyName:w.name}))}catch(e){f(t("deleteConditionError"),e)}}else{const e=a?.filter(o=>o.name!==s);try{await d.clientPolicies.updatePolicy({policies:e}),y(t("deleteClientSuccess"),D.success),b(I({realm:r,tab:"policies"}))}catch(o){f(t("deleteClientError"),o)}}}}),[ke,De]=V({titleKey:t("deleteClientPolicyProfileConfirmTitle"),messageKey:t("deleteClientPolicyProfileConfirm",{profileName:M?.name,policyName:s}),continueButtonLabel:t("delete"),continueButtonVariant:H.danger,onConfirm:async()=>{if(M?.name){h?.profiles?.splice(M.idx,1);try{await d.clientPolicies.updatePolicy({policies:a}),y(t("deleteClientPolicyProfileSuccess"),D.success),b(L({realm:r,policyName:w.name}))}catch(e){f(t("deleteClientPolicyProfileError"),e)}}else{const e=a?.filter(o=>o.name!==s);try{await d.clientPolicies.updatePolicy({policies:e}),y(t("deleteClientSuccess"),D.success),b(I({realm:r,tab:"policies"}))}catch(o){f(t("deleteClientError"),o)}}}}),Se=()=>{m.setValue("name",h?.name),m.setValue("description",h?.description)},Y=()=>{me(!G)},xe=async e=>{const o={...h,profiles:v.concat(e),conditions:h?.conditions},l=a?.findIndex(c=>o.name===c.name);if(!l||l===-1)return;const p=[...(a||[]).slice(0,l),o,...(a||[]).slice(l+1)];try{await d.clientPolicies.updatePolicy({policies:p}),N(p),b(L({realm:r,policyName:w.name})),y(t("realm-settings:addClientProfileSuccess"),D.success)}catch(c){f("realm-settings:addClientProfileError",c)}};return n(C,{children:[i(be,{}),i(De,{}),i(Ye,{onConfirm:e=>{xe(e.map(o=>o.name))},allProfiles:v,open:G,toggleDialog:Y}),i(Be,{name:"enabled",defaultValue:!0,control:m.control,render:({onChange:e,value:o})=>i(ue,{value:o,onChange:e,realmName:r,save:U})}),i(Ve,{variant:"light",children:n(Me,{onSubmit:fe(U),isHorizontal:!0,role:"view-realm",className:"pf-u-mt-lg",children:[i(X,{label:t("common:name"),fieldId:"kc-client-profile-name",isRequired:!0,helperTextInvalid:t("common:required"),validated:R.name?J.error:J.default,children:i(Oe,{ref:m.register({required:!0}),type:"text",id:"kc-client-profile-name",name:"name","data-testid":"client-policy-name"})}),i(X,{label:t("common:description"),fieldId:"kc-description",children:i($e,{name:"description","aria-label":t("description"),ref:m.register(),type:"text",id:"kc-client-policy-description","data-testid":"client-policy-description"})}),n(Ue,{children:[i(k,{variant:"primary",type:"submit","data-testid":"saveCreatePolicy",isDisabled:!w.name,children:t("common:save")}),i(k,{id:"cancelCreatePolicy",variant:"link",onClick:()=>S||s?Se():b(I({realm:r,tab:"policies"})),"data-testid":"cancelCreatePolicy",children:t(S?"common:reload":"common:cancel")})]}),(S||m.formState.isSubmitted)&&n(C,{children:[n(Z,{children:[i(A,{children:n(F,{className:"kc-conditions",component:E.h1,children:[t("conditions"),i(K,{helpText:"realm-settings-help:conditions",fieldLabelId:"realm-settings:conditions"})]})}),i(A,{align:{default:"alignRight"},children:i(k,{id:"addCondition",component:e=>i(O,{...e,to:Ae({realm:r,policyName:s})}),variant:"link",className:"kc-addCondition","data-testid":"addCondition",icon:i(ee,{}),children:t("realm-settings:addCondition")})})]}),z.length>0?i(ie,{"aria-label":t("conditions"),isCompact:!0,children:z.map((e,o)=>i(te,{"aria-labelledby":"conditions-list-item",id:e.condition,"data-testid":"conditions-list-item",children:i(oe,{"data-testid":"conditions-list-row",children:i(le,{dataListCells:[n(ne,{"data-testid":"condition-type",children:[Object.keys(e.configuration).length!==0?i(O,{"data-testid":`${e.condition}-condition-link`,to:Fe({realm:r,conditionName:e.condition,policyName:s}),className:"kc-condition-link",children:e.condition},e.condition):e.condition,ye?.map(l=>l.id===e.condition&&n(C,{children:[i(K,{helpText:l.helpText,fieldLabelId:e.condition}),i(k,{variant:"link",isInline:!0,icon:i(ae,{className:"kc-conditionType-trash-icon","data-testid":`delete-${e.condition}-condition`,onClick:()=>{he(),de({idx:o,name:l.id})}})})]}))]},`name-${o}`)]})})},`list-item-${o}`))}):n(C,{children:[i(Q,{}),i(F,{className:"kc-emptyConditions",component:E.h6,children:t("realm-settings:emptyConditions")})]})]}),(S||m.formState.isSubmitted)&&n(C,{children:[n(Z,{children:[i(A,{children:n(F,{className:"kc-client-profiles",component:E.h1,children:[t("clientProfiles"),i(K,{helpText:"realm-settings-help:clientProfiles",fieldLabelId:"realm-settings:clientProfiles"})]})}),i(A,{align:{default:"alignRight"},children:i(k,{id:"addClientProfile",variant:"link",className:"kc-addClientProfile","data-testid":"addClientProfile",icon:i(ee,{}),onClick:Y,children:t("realm-settings:addClientProfile")})})]}),v.length>0?i(ie,{"aria-label":t("profiles"),isCompact:!0,children:v.map((e,o)=>i(te,{"aria-labelledby":`${e}-profile-list-item`,id:`${e}-profile-list-item`,"data-testid":"profile-list-item",children:i(oe,{"data-testid":"profile-list-row",children:i(le,{dataListCells:[n(ne,{"data-testid":"profile-name",children:[e&&i(O,{"data-testid":"profile-name-link",to:Ee({realm:r,profileName:e}),className:"kc-profile-link",children:e},e),v.filter(l=>l===e).map(l=>n(C,{children:[i(K,{helpText:u.find(p=>l===p.name)?.description,fieldLabelId:e}),i(k,{variant:"link",isInline:!0,icon:i(ae,{className:"kc-conditionType-trash-icon","data-testid":"deleteClientProfileDropdown",onClick:()=>{ke(),pe({idx:o,name:l})}})})]}))]},"name")]})})},e))}):n(C,{children:[i(Q,{}),i(F,{className:"kc-emptyClientProfiles",component:E.h6,children:t("realm-settings:emptyProfiles")})]})]})]})})]})}export{Si as default};
