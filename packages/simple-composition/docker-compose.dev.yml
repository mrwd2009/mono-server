version: '3.7'

services:

  # The 'setup' service runs a one-off script which initializes the
  # 'logstash_internal' and 'kibana_system' users inside Elasticsearch with the
  # values of the passwords defined in the '.env' file.
  #
  # This task is only performed during the *initial* startup of the stack. On all
  # subsequent runs, the service simply returns immediately, without performing
  # any modification to existing users.
  setup:
    build:
      context: setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    volumes:
      - setup:/state:Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:?required}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:?required}
    networks:
      - elk

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - elasticsearch:/usr/share/elasticsearch/data:z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: -Xmx256m -Xms256m
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:?required}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk

  filebeat:
    build:
      context: extensions/filebeat/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    # Run as 'root' instead of 'filebeat' (uid 1000) to allow reading
    # 'docker.sock' and the host's filesystem.
    user: root
    command:
      # Log to stderr.
      - -e
      # Disable config file permissions checks. Allows mounting
      # 'config/filebeat.yml' even if it's not owned by root.
      # see: https://www.elastic.co/guide/en/beats/libbeat/current/config-file-permissions.html
      - --strict.perms=false
    volumes:
      - ./extensions/filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro,Z
      - ../simple-service/log/winston/development:/apps/gateway/log
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:?required}
    networks:
      - elk
    depends_on:
      - elasticsearch

  redis_server:
    image: redis:7.0.0
    volumes:
      - rule_engine_modeling_redis:/data
    ports:
      - "6379:6379"
    networks:
      - elk

  grafana:
    image: ubuntu/grafana:8.1-21.10_beta
    environment:
      PROMETHEUS_URL: http://prometheus:9090
      GF_AUTH_DISABLE_LOGIN_FORM: true
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    volumes:
      - ../simple-service/scripts/datasources.prod.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - rule_engine_modeling_grafana:/var/lib/grafana
    networks:
      - elk

  prometheus:
    image: ubuntu/prometheus:2.32-20.04_beta
    # prometheus doesn't support environment values in config file, please change config file accordingly
    # environment:
    #   MODELING_API_JOB_NAME: ${MODELING_API_PROMETHEUS_LABEL:-modeling-api}-production-${MODELING_API_APP_ENV:-dev}-app
    #   MODELING_API_METRICS_PATH: ${MODELING_API_PROMETHEUS_PATH:-/metrics}
    #   MODELING_API_METRICSDOMAIN: modeling_api:${MODELING_API_PROMETHEUS_PORT:-4000}
    # ports:
    #   - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ../simple-service/scripts/prometheus.prod.yml:/etc/prometheus/prometheus.yml
    networks:
      - elk

  kibana:
    build:
      context: kibana/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - "5601:5601"
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:?required}
    networks:
      - elk
    depends_on:
      - elasticsearch

  etcd:
    build:
      context: etcd/
    ports:
      - 2379:2379
      - 2380:2380
    volumes:
      - rule_engine_modeling_etcd_data:/etcd-data
    networks:
      - elk

networks:
  elk:
    driver: bridge

volumes:
  setup:
  elasticsearch:
  rule_engine_modeling_api_temp:
  rule_engine_modeling_grafana:
  rule_engine_modeling_redis:
  rule_engine_modeling_etcd_data:
