#!/bin/bash

set -euo pipefail

function wait_for_elasticsearch_template {
	local elasticsearch_host="${ELASTICSEARCH_HOST:-elasticsearch}"

	local -a args=( '-s' '-D-' '-m15' '-w' '%{http_code}' "http://${elasticsearch_host}:9200/_index_template/rule-engine-modeling-ui" )

	if [[ -n "${ELASTIC_PASSWORD:-}" ]]; then
		args+=( '-u' "elastic:${ELASTIC_PASSWORD}" )
	fi

	local -i result=1
	local output

	# retry for max 300s (60*5s)
	for _ in $(seq 1 60); do
		output="$(curl "${args[@]}" || true)"
		if [[ "${output: -3}" -eq 200 ]]; then
			result=0
			break
		fi

		sleep 5
	done

	if ((result)); then
		echo -e "\n${output::-3}"
	fi

	return $result
}

wait_for_elasticsearch_template

# Check if the the user has invoked the image with flags.
# eg. "filebeat -c filebeat.yml"
if [[ -z $1 ]] || [[ ${1:0:1} == '-' ]] ; then
  exec filebeat "$@"
else
  # They may be looking for a Beat subcommand, like "filebeat setup".
  subcommands=$(filebeat help \
                  | awk 'BEGIN {RS=""; FS="\n"} /Available Commands:/' \
                  | awk '/^\s+/ {print $1}')

  # If we _did_ get a subcommand, pass it to filebeat.
  for subcommand in $subcommands; do
      if [[ $1 == $subcommand ]]; then
        exec filebeat "$@"
      fi
  done
fi

# If neither of those worked, then they have specified the binary they want, so
# just do exactly as they say.
exec "$@"